
1、JMM(java内存模型)：定义了jvm


====== 架构的演化 ======
1、单体架构：打成一个war包部署在一个进程中
  缺点：
  1)、开发困难，业务之间的耦合性太强，职责不清
  2)、部署耗时长
  3)、稳定性差
  4)、扩展性差（Sale Up）

2、面向服务的架构（SOA）：service-oriented architecture是一个组件模型，它将应用程序的不同功能单元（称为服务）进行拆分，并通过这些服务之间定义良好的接口和契约联系起来。接口是采用中立的方式进行定义的，它应该独立于实现服务的硬件平台、操作系统和编程语言。这使得构建在各种各样的系统中的服务可以以一种统一和通用的方式进行交互。Soa系统是一种企业通用性架构。ESB企业服务总线进行通信

3、微服务架构：注册中心、网关、监控
  优点：
  1)、边界清晰，开发简单
  2)、技术栈灵活
  3)、松耦合
  4)、可用性高
  5)、按需扩展
  缺点：
  1)、成本大
  2)、运维难度增加
  3)、代码依赖变为接口依赖
  4)、分布式带来的复杂性
      网络延迟，
	  故障，
	  调用容错，
	  消息序列化，
	  数据一致性，
	  异步调用

4、


====== SSM工程改造成微服务应该怎么做 ======
1、服务寻址问题：多服务、多实例、动态扩/缩容
2、注册中心（服务注册与发现）Netflix Eureka
3、服务熔断与升级、线程隔离-Netflix Hystrix


====== 解决性能瓶颈的优化方案 ======
1、集群，负载均衡
2、CDN
3、服务缓存
4、数据库分库分表，读写分离




适配：
同时支持手机端、Pad端
避免重复开发

为什么两个晚上就能够完成多平台兼容
wechat-ui
敏捷开发：外包


架构师善于利用工具
不要把简单的事情搞复杂了？

CORE
EVENT
PLUGIN
TOOLS


架构师岗位职责：
1、负责技术架构的搭建
2、技术的培训
3、容灾处理解决方案
4、开发和部署平台规范化
更加注重技术的专业性

技术总监（CTO：首席技术官）：
更加注重团队管理和协调人：技术人

