
1、概念：

  1)、序列化：把对象转换为字节序列的过程。	对象 --> 字节序列
  
  2)、反序列化：把字节序列恢复为对象的过程。字节序列 --> 对象
  
2、主要用途：

　1)、把对象的字节序列永久地保存到硬盘上，通常存放在一个文件中。

  2)、在网络上传送对象的字节序列。

3、用途案例：
  1)、在很多应用中，需要对某些对象进行序列化，让它们离开内存空间，入住物理硬盘，以便长期保存。比如最常见的是Web服务器中的Session对象，当有 10万用户并发访问，就有可能出现10万个Session对象，内存可能吃不消，于是Web容器就会把一些seesion先序列化到硬盘中，等要用了，再把保存在硬盘中的对象还原到内存中。
  2)、当两个进程在进行远程通信时，彼此可以发送各种类型的数据。无论是何种类型的数据，都会以二进制序列的形式在网络上传送。发送方需要把这个Java对象转换为字节序列，才能在网络上传送；接收方则需要把字节序列再恢复为Java对象。

4、JDK库中的java API

  1)、对象输出流(ObjectOutputStream)：writeObject(Object obj)方法可对参数指定的obj对象进行序列化，把得到的字节序列写到一个目标输出流中。
  
  2)、对象输入流(ObjectInputStream)：readObject()方法从一个源输入流中读取字节序列，再把它们反序列化为一个对象，并将其返回。
  
5、实现步骤：

  1)、对象序列化包括如下步骤：
  
      (1)、创建一个对象输出流，它可以包装一个其他类型的目标输出流，如文件输出流；
      (2)、通过对象输出流的writeObject()方法写对象。
	  
  2)、对象反序列化的步骤如下：
      (1)、创建一个对象输入流，它可以包装一个其他类型的源输入流，如文件输入流；
      (2)、通过对象输入流的readObject()方法读取对象。
	  
6、影响rpc通信性能的因素：

  1)、序列化的计算性能
  
  2)、数据包的大小

  3)、跨语言
	  
	  
如何得到负数，-84，得到84的二进制，取反加1，高位1表示符号-
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  

