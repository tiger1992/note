
====== 操作系统与计算机网络 ======

1、TCP协议，双工，部分client端与server端。


====== 常用的设计模式 ======

1、工厂模式：spring如何创建Bean

2、代理模式:Motan服务的动态代理

3、责任链模式：Netty消息处理方式

4、适配器模式：SLF4J如何支持Log4J

5、观察者模式：GRPC是如何支持流式请求

6、构造者模式：PB序列化中的Builder


====== 双亲委派模式 ======

1、加载器种类：

  1)、启动类加载器：Bootstrap ClassLoader	<JAVA_HOME>/lib
   
  2)、扩展类加载器：Ext ClassLoader		<JAVA_HOME>/lib/ext
   
  3)、应用类加载器：App ClassLoader		java -classpath
   
  4)、自定义加载器：Custom ClassLoader

2、由java自带的加载类加载的类在java的整个生命周期中是不会被卸载

3、加载方式：首先是往上一直委派给自己的父类加载器加载，如果父类加载器加载不了才向下移动给他的下一级子类加载

4、好处：

  1)、避免类的重复加载
  
  2)、避免java的核心api被篡改
  

====== 分代回收 ======

1、代别：
  1)、年轻代：新创建的对象，大部分在Eden区，
  2)、老年代：由年轻带晋升而来，存活时间较长的类
  3)、主要保存类信息

2、分代管理主要是便于垃圾回收

3、基于两个事实：
  1)、大部分对象很快就不会被使用
  2)、有一部分不会立即不用，但也不会存在很长时间




