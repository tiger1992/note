
1、查看用户名和邮箱地址：

  【git config user.name】

  【git config user.email】

2、修改用户名和邮箱地址

  【git config --global user.name "ljt2019"】
  【git config --global user.email "1165069099@qq.com"】
  
3、生成公钥：【ssh-keygen -t rsa -C "1165069099@qq.com"】
[root@w1 ~]# ssh-keygen -t rsa -C "1165069099@qq.com"
Generating public/private rsa key pair.
Enter file in which to save the key (/root/.ssh/id_rsa): 
Created directory '/root/.ssh'.
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /root/.ssh/id_rsa.
Your public key has been saved in /root/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:+rF5YIhJM9ADvgH1lgKH3tzQvD8YgprldZMxQ332w1Q 1165069099@qq.com
The key's randomart image is:
+---[RSA 2048]----+
|oo+oo...     .E  |
|.=.oo++ . o .    |
|. B.*..= o +     |
| o.O=++     +    |
|.+.o.*+oS    .   |
|o . o..+o        |
|      ..o.       |
|       . +.      |
|        +.       |
+----[SHA256]-----+

4、将公钥上传到【/root/.ssh/id_rsa.pub】，这里生产的时候默认就是在这里
  1)、查看内容【cat /root/.ssh/id_rsa.pub】
  【
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDbP4d24OEWtYbPt/xpDiVPdA7ovFO+ZcQD8pNLBHdhQc3F34o0pxdFgYFGSx9XKzqNXap5N7noFa+NFTlCS6Tks+wmeMMDDwbG9rn7YOtf6qKk3exP3e9JOUDutNaYIJoSouFaMbdxpioLwI64WIoZuN7YKeSklVwxX3zHcclSwuZyOhH9dunzMdyi7eKLy 省略
  】
  
  2)、将里面信息配置到github的【https://github.com/settings/keys】中
  
  3)、测试时候配置成功：【ssh -T git@github.com】,出现下面信息时说明配置成功
  【Hi ljt2019! You've successfully authenticated, but GitHub does not provide shell access.】
  
  
====== 解决【ssh: Could not resolve hostname github.com: Name or service not known】问题 ======

1、方式一

  1)、获取github.com的ip：【ping github.com】，如下，【13.250.177.223】
  【
[root@w1 ~]# ping github.com
PING github.com (13.250.177.223) 56(84) bytes of data.
  】
  
  2)、在/etc/hosts中添加一行如下:
  【
13.250.177.223 github.com
  】
  
2、方式二

  1)、以root权限执行如下Python代码
  【
#!/usr/bin/python
#coding=utf8

import socket

host = 'github.com'

try:
    with open('/etc/hosts', 'a+') as fp: 
        ip = socket.gethostbyname(host)
        fp.write(' '.join([ip, host, '\n']))
except BaseException as e:
    print(e)
else:
    print('sucess')
  】


  
  
  
  
  
  
  
  
  
  
  