
====== 两大实现方案 ======

1、LBCC：锁定我要操作的数据，不允许其他的事务修改就行了。这种方案我们叫做基于锁的并发控制 LockBased Concurrency Control。并发还是低

2、MVCC：在修改数据的时候给它建立一个备份或者叫快照，后面再来读取这个快照就行了。这种方案我们叫做多版本的并发控制 Multi Version Concurrency Control。
   MVCC 的核心思想是： 我可以查到在我这个事务开始之前已经存在的数据，即使它在后面被修改或者删除了。在我这个事务之后新增的数据，我是查不到的。
   
   
问题：这个快照什么时候创建？读取数据的时候，怎么保证能读取到这个快照而不是最新的数据？这个怎么实现呢？

  1)、nnoDB 为每行记录都实现了两个隐藏字段：
  DB_TRX_ID 6字节：插入或更新行的最后一个事务的事务ID，事务编号是自动递增的(我们把它理解为创建版本号，在数据新增或者修改为新数据的时候，记录当前事务ID)
  DB_ROLL_PTR，7 字节：回滚指针（我们把它理解为删除版本号，数据被删除或记录为旧数据的时候，记录当前事务 ID）。


