
1、时间复杂度：放映了程序执行时间随输入规模增长而增长的量级。

2、测试方法：
  1)、【事后统计】，有缺陷：受计算机硬件、软件等环境的影响。
  2)、一般采用【事前分析估算】，运行耗时取决的因素：算法策略方法、编译产生的代码质量、问题输入的规模、机器执行指令速度
  
3、算法组成：由控制结构(顺序、分支、循环)和原操作(固有数据类型操作)组成。

4、时间频度：算法花费的时间与算法中语句执行次数成正比，成为语句频度或时间频度，记为：T(n)。

5、时间复杂度：算法中基本操作重复执行的次数是问题规模n的某个函数，用T(n)表示，

6、常见的算法时间复杂度由小到大依次为：Ο(1)＜Ο(log2n)＜Ο(n)＜Ο(nlog2n)＜Ο(n2)＜Ο(n3)＜…＜Ο(2n)＜Ο(n!)

7、求解算法的时间复杂度的具体步骤：
  1)、找出算法中的基本语句，算法中执行次数最多的那条语句，通常是最内层循环体
  2)、计算基本语句的执行次数的数量级
  3)、只关注最高次幂，忽略所有低次幂和最高次幂的系数，简化算法分析，使注意力集中一点上，增长率
  4)、用大O记号表示算法时间性能，将基本语句执行的数量级放入大O记号中
  5)、例如，一个for循环的时间复杂度为Ο(n)，第二个for循环的时间复杂度为Ο(n2)，则整个算法的时间复杂度为Ο(n+n2)=Ο(n2)
  6)、Ο(1)表示基本语句的执行次数是一个常数，一般来说，只要算法中不存在循环语句，其时间复杂度就是Ο(1)
  7)、




