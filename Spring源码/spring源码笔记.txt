
1、IOC容器和AOP技术是实现spring的核心底层技术，是该技术框架中的‘道’。

2、IOC的概念：依赖对象的获取被反转（依赖注入），许多非凡的应用都是由两个或多个类通过彼此的合作来实现业务逻辑，这使得每个对象都需要与其合作的对象（也就是所依赖的对象）的引用，如果这个获取过程要靠自身实现，那么，这将导致代码高度耦合而且难以测试。

3、通过IOC容器，对象依赖关系的管理被反转，转到IOC容器中来了，对象之间的相互依赖由IOC容器进行管理，并由容器完成对象的注入。

4、BeanFactory和ApplicationContext可以看作是容器的抽象表现形式，规范了容器的基本功能。

5、



====== 对注解的理解 ======
从JDK5开始,Java增加对元数据的支持，也就是注解，注解与注释是有一定区别的，可以把注解理解为代码里的特殊标记，这些标记可以在编译，类加载，运行时被读取，并执行相应的处理。通过注解开发人员可以在不改变原有代码和逻辑的情况下在源代码中嵌入补充信息。








